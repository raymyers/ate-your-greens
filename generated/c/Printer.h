/* File generated by the BNF Converter (bnfc 2.9.6). */

#ifndef PRINTER_HEADER
#define PRINTER_HEADER

#include "Absyn.h"

/* Certain applications may improve performance by changing the buffer size */
#define BUFFER_INITIAL 2048
/* You may wish to change _L_PAREN or _R_PAREN */
#define _L_PAREN '('
#define _R_PAREN ')'

/* The following are simple heuristics for rendering terminals */
/* You may wish to change them */
void renderCC(Char c);
void renderCS(String s);
void indent(void);
void backup(void);
void onEmptyLine(void);
void removeTrailingSpaces(void);
void removeTrailingWhitespace(void);


char *printProgram(Program p);

void ppProgram(Program p, int i);
void ppExp(Exp p, int i);
void ppListListItem(ListListItem p, int i);
void ppListRecordField(ListRecordField p, int i);
void ppListMatchItem(ListMatchItem p, int i);
void ppListExp(ListExp p, int i);
void ppListParam(ListParam p, int i);
void ppMatchItem(MatchItem p, int i);
void ppMatchPattern(MatchPattern p, int i);
void ppRecordField(RecordField p, int i);
void ppParam(Param p, int i);
void ppListItem(ListItem p, int i);

char *showProgram(Program p);

void shProgram(Program p);
void shExp(Exp p);
void shListListItem(ListListItem p);
void shListRecordField(ListRecordField p);
void shListMatchItem(ListMatchItem p);
void shListExp(ListExp p);
void shListParam(ListParam p);
void shMatchItem(MatchItem p);
void shMatchPattern(MatchPattern p);
void shRecordField(RecordField p);
void shParam(Param p);
void shListItem(ListItem p);

void ppNamedReference(String s, int i);
void ppTag(String s, int i);
void ppId(String s, int i);
void shNamedReference(String s);
void shTag(String s);
void shId(String s);
void ppInteger(Integer n, int i);
void ppDouble(Double d, int i);
void ppChar(Char c, int i);
void ppString(String s, int i);
void ppIdent(String s, int i);
void shInteger(Integer n);
void shDouble(Double d);
void shChar(Char c);
void shString(String s);
void shIdent(String s);
void bufEscapeS(const char *s);
void bufEscapeC(const char c);
void bufAppendS(const char *s);
void bufAppendC(const char c);
void bufReset(void);
void resizeBuffer(void);

#endif

