// File generated by the BNF Converter (bnfc 2.9.6).

package eyg;
/** Composition Visitor
*/

public class ComposVisitor<A> implements
  eyg.Absyn.Program.Visitor<eyg.Absyn.Program,A>,
  eyg.Absyn.Exp.Visitor<eyg.Absyn.Exp,A>,
  eyg.Absyn.MatchItem.Visitor<eyg.Absyn.MatchItem,A>,
  eyg.Absyn.MatchPattern.Visitor<eyg.Absyn.MatchPattern,A>,
  eyg.Absyn.RecordField.Visitor<eyg.Absyn.RecordField,A>,
  eyg.Absyn.Param.Visitor<eyg.Absyn.Param,A>,
  eyg.Absyn.ListItem.Visitor<eyg.Absyn.ListItem,A>
{
    /* Program */
    public eyg.Absyn.Program visit(eyg.Absyn.PExps p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.PExps(exp_);
    }

    /* Exp */
    public eyg.Absyn.Exp visit(eyg.Absyn.ELet p, A arg)
    {
      eyg.Absyn.MatchPattern matchpattern_ = p.matchpattern_.accept(this, arg);
      eyg.Absyn.Exp exp_1 = p.exp_1.accept(this, arg);
      eyg.Absyn.Exp exp_2 = p.exp_2.accept(this, arg);
      return new eyg.Absyn.ELet(matchpattern_, exp_1, exp_2);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EList p, A arg)
    {
      eyg.Absyn.ListListItem listlistitem_ = new eyg.Absyn.ListListItem();
      for (eyg.Absyn.ListItem x : p.listlistitem_)
      {
        listlistitem_.add(x.accept(this,arg));
      }
      return new eyg.Absyn.EList(listlistitem_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.ERecord p, A arg)
    {
      eyg.Absyn.ListRecordField listrecordfield_ = new eyg.Absyn.ListRecordField();
      for (eyg.Absyn.RecordField x : p.listrecordfield_)
      {
        listrecordfield_.add(x.accept(this,arg));
      }
      return new eyg.Absyn.ERecord(listrecordfield_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.ETagged p, A arg)
    {
      String tag_ = p.tag_;
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.ETagged(tag_, exp_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.ELambda p, A arg)
    {
      eyg.Absyn.ListParam listparam_ = new eyg.Absyn.ListParam();
      for (eyg.Absyn.Param x : p.listparam_)
      {
        listparam_.add(x.accept(this,arg));
      }
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.ELambda(listparam_, exp_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EPerform p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.EPerform(exp_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EHandle p, A arg)
    {
      String tag_ = p.tag_;
      eyg.Absyn.Exp exp_1 = p.exp_1.accept(this, arg);
      eyg.Absyn.Exp exp_2 = p.exp_2.accept(this, arg);
      return new eyg.Absyn.EHandle(tag_, exp_1, exp_2);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EMatch p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      eyg.Absyn.ListMatchItem listmatchitem_ = new eyg.Absyn.ListMatchItem();
      for (eyg.Absyn.MatchItem x : p.listmatchitem_)
      {
        listmatchitem_.add(x.accept(this,arg));
      }
      return new eyg.Absyn.EMatch(exp_, listmatchitem_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EApply p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      eyg.Absyn.ListExp listexp_ = new eyg.Absyn.ListExp();
      for (eyg.Absyn.Exp x : p.listexp_)
      {
        listexp_.add(x.accept(this,arg));
      }
      return new eyg.Absyn.EApply(exp_, listexp_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.ESelect p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      String id_ = p.id_;
      return new eyg.Absyn.ESelect(exp_, id_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EVar p, A arg)
    {
      String id_ = p.id_;
      return new eyg.Absyn.EVar(id_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EInt p, A arg)
    {
      Integer integer_ = p.integer_;
      return new eyg.Absyn.EInt(integer_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.ENegInt p, A arg)
    {
      Integer integer_ = p.integer_;
      return new eyg.Absyn.ENegInt(integer_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.EString p, A arg)
    {
      String string_ = p.string_;
      return new eyg.Absyn.EString(string_);
    }
    public eyg.Absyn.Exp visit(eyg.Absyn.ENamedReference p, A arg)
    {
      String namedreference_ = p.namedreference_;
      return new eyg.Absyn.ENamedReference(namedreference_);
    }

    /* MatchItem */
    public eyg.Absyn.MatchItem visit(eyg.Absyn.MatchItem0 p, A arg)
    {
      eyg.Absyn.MatchPattern matchpattern_ = p.matchpattern_.accept(this, arg);
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.MatchItem0(matchpattern_, exp_);
    }

    /* MatchPattern */
    public eyg.Absyn.MatchPattern visit(eyg.Absyn.MPTagged p, A arg)
    {
      String tag_ = p.tag_;
      eyg.Absyn.MatchPattern matchpattern_ = p.matchpattern_.accept(this, arg);
      return new eyg.Absyn.MPTagged(tag_, matchpattern_);
    }
    public eyg.Absyn.MatchPattern visit(eyg.Absyn.MPRecord p, A arg)
    {
      eyg.Absyn.ListRecordField listrecordfield_ = new eyg.Absyn.ListRecordField();
      for (eyg.Absyn.RecordField x : p.listrecordfield_)
      {
        listrecordfield_.add(x.accept(this,arg));
      }
      return new eyg.Absyn.MPRecord(listrecordfield_);
    }
    public eyg.Absyn.MatchPattern visit(eyg.Absyn.MPId p, A arg)
    {
      String id_ = p.id_;
      return new eyg.Absyn.MPId(id_);
    }

    /* RecordField */
    public eyg.Absyn.RecordField visit(eyg.Absyn.RFKeyVal p, A arg)
    {
      String id_ = p.id_;
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.RFKeyVal(id_, exp_);
    }
    public eyg.Absyn.RecordField visit(eyg.Absyn.RFSpread p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.RFSpread(exp_);
    }

    /* Param */
    public eyg.Absyn.Param visit(eyg.Absyn.PId p, A arg)
    {
      String id_ = p.id_;
      return new eyg.Absyn.PId(id_);
    }

    /* ListItem */
    public eyg.Absyn.ListItem visit(eyg.Absyn.LIExpr p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.LIExpr(exp_);
    }
    public eyg.Absyn.ListItem visit(eyg.Absyn.LISpread p, A arg)
    {
      eyg.Absyn.Exp exp_ = p.exp_.accept(this, arg);
      return new eyg.Absyn.LISpread(exp_);
    }
}
