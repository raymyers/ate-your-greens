// File generated by the BNF Converter (bnfc 2.9.6).

package eyg;

/** Abstract Visitor */

public class AbstractVisitor<R,A> implements AllVisitor<R,A> {
    /* Program */
    public R visit(eyg.Absyn.PExps p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(eyg.Absyn.Program p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }
    /* Exp */
    public R visit(eyg.Absyn.ELet p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EList p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.ERecord p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.ETagged p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.ELambda p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EPerform p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EHandle p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EMatch p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EApply p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.ESelect p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EVar p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EInt p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.ENegInt p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.EString p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.ENamedReference p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(eyg.Absyn.Exp p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }
    /* MatchItem */
    public R visit(eyg.Absyn.MatchItem0 p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(eyg.Absyn.MatchItem p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }
    /* MatchPattern */
    public R visit(eyg.Absyn.MPTagged p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.MPRecord p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.MPId p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(eyg.Absyn.MatchPattern p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }
    /* RecordField */
    public R visit(eyg.Absyn.RFKeyVal p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.RFSpread p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(eyg.Absyn.RecordField p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }
    /* Param */
    public R visit(eyg.Absyn.PId p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(eyg.Absyn.Param p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }
    /* ListItem */
    public R visit(eyg.Absyn.LIExpr p, A arg) { return visitDefault(p, arg); }
    public R visit(eyg.Absyn.LISpread p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(eyg.Absyn.ListItem p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }

}
